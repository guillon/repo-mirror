{"name":"repo-mirror","tagline":"A simple tool for local repo git repositories caching","body":"\r\n[![Build Status](https://api.travis-ci.org/guillon/repo-mirror.png?branch=master)](https://travis-ci.org/guillon/repo-mirror/branches)\r\n[![Coverage Status](https://coveralls.io/repos/guillon/repo-mirror/badge.svg?branch=master)](https://coveralls.io/r/guillon/repo-mirror?branch=master)\r\n[![Issue Count](https://codeclimate.com/github/guillon/repo-mirror/badges/issue_count.svg)](https://codeclimate.com/github/guillon/repo-mirror)\r\n\r\n# Synopsis\r\n\r\nThe repo-mirror utility is a simple command for enabling automatic local\r\nmirroring of repo git repositories.\r\n\r\nThe principle is to be able to replace the bare repo command by a repo-mirror\r\ncommand that will handle the creation of the mirror repositories and\r\nexecute the actual repo command referring to the mirror repositories when\r\ndoing repo init/sync in particular.\r\n\r\nFor instance, in order to automatically benefit from a local shared mirror\r\nfor all the repositories of a repo manifest, instead of executing:\r\n\r\n    $ repo init -u manifest_url.git\r\n    $ repo sync\r\n\r\none can execute:\r\n\r\n    $ repo-mirror -m $HOME/.repo-mirror -- init -u manifest_url.git\r\n    $ repo sync\r\n\r\nNote that a visible effect on the repo init step is that the output\r\nwill show actually two repo init steps as it will first init/sync the mirror\r\nand then init/sync the current directory.\r\n\r\nThe above two commands roughly behave as if one has typed:\r\n\r\n    $ (cd $HOME/.repo-mirror/... && repo init --mirror -u manifest_url.git)\r\n    $ (cd $HOME/.repo-mirror/... && repo sync)\r\n    $ repo init --reference=$HOME/.repo-mirror/... -u manifest_url.git\r\n    $ repo sync\r\n\r\nOther things are actually done behind the scene such as selecting the\r\nactual mirrors directories, taking locks when needed and working\r\naround limitations of git and repo regarding concurrency.\r\n\r\n\r\n# Download\r\n\r\nDownload the repo-mirror tool from the releases page:\r\nhttps://github.com/guillon/repo-mirror/releases\r\n\r\nOr download the last stable version of the script from there:\r\nhttps://raw.githubusercontent.com/guillon/repo-mirror/master/repo-mirror\r\n\r\nFor instance:\r\n\r\n    $ wget -O ~/bin/repo-mirror https://raw.githubusercontent.com/guillon/repo-mirror/master/repo-mirror\r\n    $ chmod +x ~/bin/repo-mirror\r\n\r\n\r\n# Examples\r\n\r\nA typical usage of such a tool is for automatically setting up\r\nlocal mirrors for build scripts or, for a user, automatically\r\nsharing git repositories between several concurrent repo directories.\r\n\r\nFor instance, if a build script uses an envvar REPO,\r\none can simply set it to:\r\n\r\n    $ REPO=\"repo-mirror -m $HOME/.repo-mirror -j8 --\"; export REPO\r\n    $ ./build_script.sh\r\n\r\nIf one wants to make a repo command wrapper such that every invocation\r\nof repo does automatically mirror repositories, it can be done this way:\r\n\r\n    $ cat >$HOME/bin/repo <<EOF\r\n    #!/bin/sh\r\n    # Execute repo command under the control of repo-mirror.\r\n    # Mirrors will be stored in $HOME/.repo-mirror as per -m option.\r\n    # Note that the actual repo path must be given with the -r option.\r\n    # Mirrors repo sync are done with 8 threads as per -j option.\r\n    exec repo-mirror -m $HOME/.repo-mirror -r /usr/local/bin/repo -j8 -- ${1+\"$@\"}\r\n    EOF\r\n    $ chmod +x $HOME/bin/repo\r\n    $ PATH=$HOME/bin:$PATH\r\n    $ ./build_script.sh\r\n\r\nGet the command line help with:\r\n\r\n    $ repo-mirror --help\r\n    Usage: repo-mirror [options] -- REPO_COMMAND...\r\n    \r\n    run repo commands with transparent local git mirrors management.\r\n    \r\n    Options:\r\n      -h, --help            show this help message and exit\r\n      -m MIRROR_DIR, --mirror-dir=MIRROR_DIR\r\n                            repo mirror dir, mandatory (for instance: -m $HOME\r\n                            /.repo-mirror)\r\n      -j JOBS, --jobs=JOBS  repo mirror sync jobs, passed to repo sync when\r\n                            fetching mirrors\r\n      -r REPO, --repo=REPO  repo tool actual executable. Default: repo (as found\r\n                            in $PATH)\r\n      ...\r\n\r\n\r\n# Build and Install\r\n\r\nThis tool requires python 2.6.x, 2.7.x or >= 3.x.\r\n\r\nThe tool can be used directly without installation by executing\r\ndirectly repo-mirror where downloaded.\r\n\r\nA makefile is provided anyway for completion and testing purpose.\r\n\r\nBuild with:\r\n\r\n    $ make all # a no-op actually\r\n\r\nRun unit tests with:\r\n\r\n    $ make -j8 check\r\n\r\nInstall with, for instance:\r\n\r\n    $ make install PREFIX=$HOME/local  # Default is PREFIX=/usr/local\r\n\r\n\r\n# References\r\n\r\nRefer to the project home page at:\r\nhttp://guillon.github.com/repo-mirror\r\n\r\nFill issues and enhancement request at:\r\nhttps://github.com/guillon/repo-mirror/issues\r\n\r\nRefer to the current build and validation status at:\r\nhttps://travis-ci.org/guillon/repo-mirror?branches\r\n\r\nRefer to the code coverage status at:\r\nhttps://coveralls.io/r/guillon/repo-mirror?branch=master\r\n\r\nRefer to the repo tool documentation at:\r\nhttps://source.android.com/source/using-repo.html\r\n\r\n\r\n# License\r\n\r\nThe tool is distributed under the GPLv2 license.\r\n\r\nRefer to the COPYING file: https://github.com/guillon/repo-mirror/blob/master/COPYING\r\n\r\nRefer to the COPYRIGHT file: https://github.com/guillon/repo-mirror/blob/master/COPYRIGHT\r\n","google":"UA-63382467-1","note":"Don't delete this file! It's used internally to help with page regeneration."}